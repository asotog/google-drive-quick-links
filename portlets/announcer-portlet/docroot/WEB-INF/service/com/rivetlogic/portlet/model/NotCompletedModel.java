/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rivetlogic.portlet.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import com.rivetlogic.portlet.service.persistence.NotCompletedPK;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the NotCompleted service. Represents a row in the &quot;rivetlogic_ann_NotCompleted&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.rivetlogic.portlet.model.impl.NotCompletedModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.rivetlogic.portlet.model.impl.NotCompletedImpl}.
 * </p>
 *
 * @author charles.rodriguez
 * @see NotCompleted
 * @see com.rivetlogic.portlet.model.impl.NotCompletedImpl
 * @see com.rivetlogic.portlet.model.impl.NotCompletedModelImpl
 * @generated
 */
public interface NotCompletedModel extends BaseModel<NotCompleted> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a not completed model instance should use the {@link NotCompleted} interface instead.
	 */

	/**
	 * Returns the primary key of this not completed.
	 *
	 * @return the primary key of this not completed
	 */
	public NotCompletedPK getPrimaryKey();

	/**
	 * Sets the primary key of this not completed.
	 *
	 * @param primaryKey the primary key of this not completed
	 */
	public void setPrimaryKey(NotCompletedPK primaryKey);

	/**
	 * Returns the u s e r_ i d of this not completed.
	 *
	 * @return the u s e r_ i d of this not completed
	 */
	@AutoEscape
	public String getUSER_ID();

	/**
	 * Sets the u s e r_ i d of this not completed.
	 *
	 * @param USER_ID the u s e r_ i d of this not completed
	 */
	public void setUSER_ID(String USER_ID);

	/**
	 * Returns the l a y o u t_ p k of this not completed.
	 *
	 * @return the l a y o u t_ p k of this not completed
	 */
	@AutoEscape
	public String getLAYOUT_PK();

	/**
	 * Sets the l a y o u t_ p k of this not completed.
	 *
	 * @param LAYOUT_PK the l a y o u t_ p k of this not completed
	 */
	public void setLAYOUT_PK(String LAYOUT_PK);

	/**
	 * Returns the p a n e l_ c l o s e_ d a t e of this not completed.
	 *
	 * @return the p a n e l_ c l o s e_ d a t e of this not completed
	 */
	public Date getPANEL_CLOSE_DATE();

	/**
	 * Sets the p a n e l_ c l o s e_ d a t e of this not completed.
	 *
	 * @param PANEL_CLOSE_DATE the p a n e l_ c l o s e_ d a t e of this not completed
	 */
	public void setPANEL_CLOSE_DATE(Date PANEL_CLOSE_DATE);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(NotCompleted notCompleted);

	@Override
	public int hashCode();

	@Override
	public CacheModel<NotCompleted> toCacheModel();

	@Override
	public NotCompleted toEscapedModel();

	@Override
	public NotCompleted toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}